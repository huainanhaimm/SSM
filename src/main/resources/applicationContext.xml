<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 组件扫描器 -->
    <context:component-scan base-package="com.SSMdemo.dao" />
    <context:component-scan base-package="com.SSMdemo.service" />

    <!-- 加载属性配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <context:property-placeholder location="classpath:log4j.properties"/>


    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--配置sqlSessionFactory 并将数据源注入(整合mybatis)-->
    <bean id="fa" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>

        <!--指定要使用到到mybatis配置文件  没有此文件则不需要此步骤-->
        <property name="configLocation" value="classpath:config.xml"/>

        <!--用于配置mapper映射xml（自动扫描）-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!-- 基于注解的方式来配置事务: -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>